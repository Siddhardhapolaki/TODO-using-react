import React from 'react';
import { ToastOptions } from './ToastContextProvider';
export interface ToastType {
    id: number;
    message?: string;
    type: 'info' | 'success' | 'warning' | 'error' | 'primary';
    timer?: number;
    position?: 'top-right' | 'top-left' | 'bottom-left' | 'bottom-right' | 'center' | 'top-center' | 'bottom-center' | 'left-center' | 'right-center';
}
export interface ToastState {
    toasts: ToastType[];
}
export type ToastAction = {
    type: 'ADD_TOAST';
    payload: ToastType;
} | {
    type: 'DELETE_TOAST';
    payload: number;
} | {
    type: 'UPDATE_TOAST';
    payload: ToastType[];
};
export interface ToastContextType {
    state: ToastState;
    warning(message: string, options?: ToastOptions): void;
    info(message: string, options?: ToastOptions): void;
    error(message: string, options?: ToastOptions): void;
    success(message: string, options?: ToastOptions): void;
    remove(id: number): void;
    dispatch: React.Dispatch<ToastAction>;
}
export declare const ToastContext: React.Context<ToastContextType | undefined>;
export declare const useToast: () => ToastContextType;
